package Thirty_Days_of_Code.Day_5_Loops;

import java.util.Scanner;

/*
Этот код предназначен для чтения целого числа n из стандартного ввода и вывода таблицы умножения для этого числа от 1 до 10.
 */

public class AnotherSolution { // Это объявление класса с именем AnotherSolution
    // Класс является публичным, что означает, что он доступен из любого другого класса.

    private static final Scanner scanner = new Scanner(System.in);
    /*
    Здесь объявляется приватная статическая константа scanner типа Scanner.

    private означает, что переменная доступна только внутри класса AnotherSolution.

    static означает, что scanner принадлежит классу, а не объекту класса.

    final указывает, что значение переменной scanner не может быть изменено после инициализации.

    new Scanner(System.in) создает новый объект Scanner, который будет считывать ввод из стандартного потока ввода (консоли).
     */

    public static void main(String[] args) {
        /*
        Это объявление метода main, который является точкой входа в программу.

        public означает, что метод доступен из любого места.

        static означает, что для вызова метода не требуется объект класса.

        void указывает, что метод не возвращает значение.
         */

        int n = scanner.nextInt();
        // Эта строка считывает следующее целое число из ввода пользователя и присваивает его переменной n.

        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");
        /* Этот метод skip используется для пропуска следующего шаблона (новая строка или конец строки),
        который может возникнуть после вызова nextInt(). */

        for (int i = 1; i <= 10; i++) { // Это начало цикла for, который будет выполняться с i от 1 до 10 включительно.
            System.out.println(n + " x " + i + " = " + n * i);
            /* В теле цикла выводится строка, показывающая умножение числа n на число i,
            а также результат этого умножения. */
        } // Здесь заканчивается цикл for.
        scanner.close(); // Эта строка закрывает объект scanner и освобождает ресурсы, которые он занимал.
    } // Здесь заканчивается метод main.
} // Здесь заканчивается класс AnotherSolution.